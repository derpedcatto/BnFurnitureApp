// <auto-generated />
using System;
using BnFurniture.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BnFurniture.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240507220611_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BnFurniture.Domain.Entities.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Useractivitytype_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("User_Id");

                    b.HasIndex("Useractivitytype_Id");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.Characteristics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.CharacteristicsValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("Сharacteristic_id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Сharacteristic_id");

                    b.ToTable("CharacteristicsValue");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Status_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Article_Id")
                        .HasColumnType("char(36)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<Guid>("Order_Id")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Order_Id");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.PasswordResetToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("User_Id");

                    b.ToTable("PasswordResetToken");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("Author_Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Productdetails")
                        .HasColumnType("longtext");

                    b.Property<Guid>("Productype_Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("Productype_Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductArticle", b =>
                {
                    b.Property<Guid>("Article")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("Author_id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("Product_Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Article");

                    b.HasIndex("Author_id");

                    b.HasIndex("Product_Id");

                    b.ToTable("ProductArticle");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductArticleOrderItem", b =>
                {
                    b.Property<Guid>("ProductArticleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("char(36)");

                    b.HasKey("ProductArticleId", "OrderItemId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("ProductArticleOrderItem");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Category_Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("Parent_id")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductCharacteristicConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Article_Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Characteristic_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Characteristicvalue_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Article_Id");

                    b.ToTable("ProductCharacteristicConfiguration");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductMetrics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Product_Id")
                        .HasColumnType("char(36)");

                    b.Property<long?>("Sales")
                        .HasColumnType("bigint");

                    b.Property<long?>("Views")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Product_Id")
                        .IsUnique();

                    b.ToTable("ProductMetrics");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Product_id")
                        .HasColumnType("char(36)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Product_id");

                    b.HasIndex("User_Id");

                    b.ToTable("ProductReview");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Author_Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("Setcategory_Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Author_Id");

                    b.HasIndex("Setcategory_Id");

                    b.ToTable("ProductSet");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductSetCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("Parent_id")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductSetCategory");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductSetItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductSet_Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Product_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProductSet_Id");

                    b.HasIndex("Product_Id");

                    b.ToTable("ProductSetItem");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Category_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("ProducType_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Category_id");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("RegularExpression", "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastLogin_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserActivityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserActivityType");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserRole_Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Permission_Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Role_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Permission_Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("UserRole_Permission");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserWishlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("User_Id");

                    b.ToTable("UserWishlist");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserWishlistItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Article_Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Wishlist_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Article_Id");

                    b.HasIndex("Wishlist_Id");

                    b.ToTable("UserWishlistItem");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.User_UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserRole_Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserRole_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("User_UserRole");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.AuditLog", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.User", "User_AuLog")
                        .WithMany("AuditLogs")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.UserActivityType", "UserActivityType_AuLog")
                        .WithMany("AuditLogs_UsAcT")
                        .HasForeignKey("Useractivitytype_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserActivityType_AuLog");

                    b.Navigation("User_AuLog");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.CharacteristicsValue", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.Characteristics", "Characteristics")
                        .WithMany("CharacteristicsValues")
                        .HasForeignKey("Сharacteristic_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Characteristics");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.Order", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.OrderStatus", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("Status_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("Order_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.PasswordResetToken", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.User", "User_PasswordResetToken")
                        .WithMany("PasswordResetTokens")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User_PasswordResetToken");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.Product", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.Product", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductId");

                    b.HasOne("BnFurniture.Domain.Entities.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("Productype_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.User", "User_Pr")
                        .WithMany("Products_Us")
                        .HasForeignKey("Productype_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductType");

                    b.Navigation("User_Pr");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductArticle", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.User", "User_Pa")
                        .WithMany("ProductArticles_Us")
                        .HasForeignKey("Author_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.Product", "Product")
                        .WithMany("ProductArticles")
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User_Pa");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductArticleOrderItem", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.OrderItem", "OrderItem")
                        .WithMany()
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.ProductArticle", "ProductArticle")
                        .WithMany()
                        .HasForeignKey("ProductArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");

                    b.Navigation("ProductArticle");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductCharacteristicConfiguration", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.ProductArticle", "ProductArticles")
                        .WithMany("ProductCharacteristicConfiguration")
                        .HasForeignKey("Article_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductArticles");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductMetrics", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.Product", "Product")
                        .WithOne("Metrics")
                        .HasForeignKey("BnFurniture.Domain.Entities.ProductMetrics", "Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductReview", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.Product", "Products")
                        .WithMany("ProductReview")
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.User", "User_Pr")
                        .WithMany("ProductReviews")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("User_Pr");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductSet", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.User", "User_Ps")
                        .WithMany("ProductSets")
                        .HasForeignKey("Author_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.ProductSetCategory", "ProductSetCategory")
                        .WithMany("ProductSets")
                        .HasForeignKey("Setcategory_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductSetCategory");

                    b.Navigation("User_Ps");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductSetItem", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.ProductSet", "ProductSet")
                        .WithMany("ProductSetItems")
                        .HasForeignKey("ProductSet_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.Product", "Products")
                        .WithMany("ProductSetItem")
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductSet");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductType", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.ProductCategory", "ProductCategory")
                        .WithMany("ProductType")
                        .HasForeignKey("Category_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserRole_Permission", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.Permission", "Permission")
                        .WithMany("UserRole_Permissions")
                        .HasForeignKey("Permission_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.UserRole", "UserRole")
                        .WithMany("UserRole_Permissions_UsRol")
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserWishlist", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.User", "User_Wl")
                        .WithMany("UserWishlist_Us")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User_Wl");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserWishlistItem", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.ProductArticle", "ProductArticle_Uwl")
                        .WithMany("UserWishlistItems_Pa")
                        .HasForeignKey("Article_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.UserWishlist", "UserWishlist")
                        .WithMany("UserWishlistItems")
                        .HasForeignKey("Wishlist_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductArticle_Uwl");

                    b.Navigation("UserWishlist");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.User_UserRole", b =>
                {
                    b.HasOne("BnFurniture.Domain.Entities.UserRole", "UserRole")
                        .WithMany("User_UserRoles")
                        .HasForeignKey("UserRole_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BnFurniture.Domain.Entities.User", "User_Us_UsRole")
                        .WithMany("User_UserRoles_Us")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserRole");

                    b.Navigation("User_Us_UsRole");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.Characteristics", b =>
                {
                    b.Navigation("CharacteristicsValues");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.Permission", b =>
                {
                    b.Navigation("UserRole_Permissions");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.Product", b =>
                {
                    b.Navigation("Metrics")
                        .IsRequired();

                    b.Navigation("ProductArticles");

                    b.Navigation("ProductReview");

                    b.Navigation("ProductSetItem");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductArticle", b =>
                {
                    b.Navigation("ProductCharacteristicConfiguration");

                    b.Navigation("UserWishlistItems_Pa");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductCategory", b =>
                {
                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductSet", b =>
                {
                    b.Navigation("ProductSetItems");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductSetCategory", b =>
                {
                    b.Navigation("ProductSets");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.User", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Orders");

                    b.Navigation("PasswordResetTokens");

                    b.Navigation("ProductArticles_Us");

                    b.Navigation("ProductReviews");

                    b.Navigation("ProductSets");

                    b.Navigation("Products_Us");

                    b.Navigation("UserWishlist_Us");

                    b.Navigation("User_UserRoles_Us");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserActivityType", b =>
                {
                    b.Navigation("AuditLogs_UsAcT");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserRole", b =>
                {
                    b.Navigation("UserRole_Permissions_UsRol");

                    b.Navigation("User_UserRoles");
                });

            modelBuilder.Entity("BnFurniture.Domain.Entities.UserWishlist", b =>
                {
                    b.Navigation("UserWishlistItems");
                });
#pragma warning restore 612, 618
        }
    }
}
